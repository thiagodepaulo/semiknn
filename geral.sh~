#!/usr/bin/env bash

# image file
image_arq="false"
xyrgb_arq="false"
labels_arq="false"
# k do KNN Mutuo
k1=""
# k do knn com rotulos
k2=""
# number of clusters
num_clusters=0

usage() { echo "Usage: $0 -i <image file> -l <labels file> -c <number of clusters> -1 k1 -2 k2 [-x <xy_rgb file>] " 1>&2; exit 1; }

while getopts 'i:x:1:2:l:c:' flag; do
  case "${flag}" in
    i) image_arq="${OPTARG}" ;;
    x) xyrgb_arq="${OPTARG}" ;;
    l) labels_arq="${OPTARG}" ;;
    1) k1="${OPTARG}" ;;
    2) k2="${OPTARG}" ;;
    c) num_clusters="${OPTARG}" ;;	
    *) usage ;; 
  esac
done

if $num_cluster == 0; then echo "define number of clusters"; exit; fi
if [ ! -e $image_arq ]; then echo "File not found: $image_arq"; exit; fi
if [ ! -e $labels_arq ]; then echo "File not found: $label_arq"; exit; fi

if [ ! -e $xyrgb_arq ];
then
	echo "creating xyrgb file... $image_arq"
	xyrgb_arq=${image_arq}.xyrgb ;
	python rgb-convert.py -f $image_arq -o $xyrgb_arq ;	
	echo "DONE: $xyrgb_arq"
fi

#
xyrgb_arq_name=$(basename $xyrgb_arq)
xyrgb_dir_name=$(dirname $xyrgb_arq)
# arquivo com as distancias (distancias nao ordenada)
dist_arq=${xyrgb_dir_name}"/dist_"${xyrgb_arq_name}
# arquivo com indice dos knn mais proximos (ordenados por proximidade)
neig_arq=${xyrgb_dir_name}'/neig_'${xyrgb_arq_name}

# arquivo com o grafo criado
g_arq=${xyrgb_dir_name}"/graph_"${k1}"_"${k2}"_"${xyrgb_arq_name}

if [ ! -e $dist_arq ];
then
	echo "creating distance file..."
	python calc_dist.py $xyrgb_arq
	echo "DONE"
fi

# numero de vertices
n=$(wc -l < $xyrgb_arq)

echo "creating semisupervised graph..."
python lknn.py $n ${k1} $k2 $neig_arq $dist_arq $labels_arq $g_arq
echo "DONE: $g_arq"

# do spectral clustering -- matlab code!
echo "doing spectral clustering...."
cluster_arq=${xyrgb_dir_name}"/cluster_"${num_clusters}"_"${k1}"_"${k2}"_"${xyrgb_arq_name}
matlab -nojvm -nodisplay -nosplash -r "main('$g_arq','$num_clusters','$cluster_arq',$n); quit()"
echo "DONE: $cluster_arq"

#dimension of x-axis
width=$(convert $image_arq -print "%w" /dev/null)
#dimension of x-axis
height=$(convert $image_arq -print "%h" /dev/null)

echo "re-creating segmented image"
python create_image.py -f $cluster_arq -x $width -y $height
echo "DONE: "
